"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.doInjectorConfigSync = exports.doInjectorConfig = exports.InjectorFactory = void 0;
const injector_factory_1 = require("./injector-factory");
Object.defineProperty(exports, "InjectorFactory", { enumerable: true, get: function () { return injector_factory_1.DrPackageInjector; } });
function doInjectorConfig(factory, isNode = false) {
    const config = require('./config');
    return config.configHandlerMgr().runEach((file, lastResult, handler) => {
        if (isNode && handler.setupNodeInjector)
            handler.setupNodeInjector(factory);
        else if (!isNode && handler.setupWebInjector)
            handler.setupWebInjector(factory);
    });
}
exports.doInjectorConfig = doInjectorConfig;
function doInjectorConfigSync(factory, isNode = false) {
    const config = require('./config');
    config.configHandlerMgr().runEachSync((file, lastResult, handler) => {
        if (isNode && handler.setupNodeInjector)
            handler.setupNodeInjector(factory);
        else if (!isNode && handler.setupWebInjector)
            handler.setupWebInjector(factory);
    });
}
exports.doInjectorConfigSync = doInjectorConfigSync;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWlyZS1pbmplY3RvcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi90cy9yZXF1aXJlLWluamVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSx5REFBcUQ7QUFFeEIsZ0dBRnJCLG9DQUFpQixPQUVtQjtBQWM1QyxTQUFnQixnQkFBZ0IsQ0FBQyxPQUEwQixFQUFFLE1BQU0sR0FBRyxLQUFLO0lBQ3pFLE1BQU0sTUFBTSxHQUFtQixPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbkQsT0FBTyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxPQUFPLENBQXdCLENBQUMsSUFBWSxFQUFFLFVBQWUsRUFBRSxPQUFPLEVBQUUsRUFBRTtRQUN6RyxJQUFJLE1BQU0sSUFBSSxPQUFPLENBQUMsaUJBQWlCO1lBQ3JDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUNoQyxJQUFJLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxnQkFBZ0I7WUFDMUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RDLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQVJELDRDQVFDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsT0FBMEIsRUFBRSxNQUFNLEdBQUcsS0FBSztJQUM3RSxNQUFNLE1BQU0sR0FBbUIsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ25ELE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLFdBQVcsQ0FBd0IsQ0FBQyxJQUFZLEVBQUUsVUFBZSxFQUFFLE9BQU8sRUFBRSxFQUFFO1FBQ3RHLElBQUksTUFBTSxJQUFJLE9BQU8sQ0FBQyxpQkFBaUI7WUFDckMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ2hDLElBQUksQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDLGdCQUFnQjtZQUMxQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBUkQsb0RBUUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ZhY3RvcnlNYXBJbnRlcmZ9IGZyb20gJ3JlcXVpcmUtaW5qZWN0b3IvZGlzdC9mYWN0b3J5LW1hcCc7XG5pbXBvcnQge1JlcXVpcmVJbmplY3Rvcn0gZnJvbSAncmVxdWlyZS1pbmplY3Rvci9kaXN0L3JlcGxhY2UtcmVxdWlyZSc7XG5pbXBvcnQge0RyUGFja2FnZUluamVjdG9yfSBmcm9tICcuL2luamVjdG9yLWZhY3RvcnknO1xuaW1wb3J0IF9jb25maWcgZnJvbSAnLi9jb25maWcnO1xuZXhwb3J0IHtEclBhY2thZ2VJbmplY3RvciBhcyBJbmplY3RvckZhY3Rvcnl9O1xuZXhwb3J0IHtGYWN0b3J5TWFwSW50ZXJmLCBSZXF1aXJlSW5qZWN0b3J9O1xuXG4vLyBleHBvcnQgaW50ZXJmYWNlIEluamVjdG9yRmFjdG9yeSBleHRlbmRzIFJlcXVpcmVJbmplY3RvciB7XG4vLyBcdGFkZFBhY2thZ2UobmFtZTogc3RyaW5nLCBkaXI6IHN0cmluZyk6IHZvaWQ7XG4vLyBcdGZyb21BbGxDb21wb25lbnRzKCk6IEZhY3RvcnlNYXBJbnRlcmY7XG4vLyBcdG5vdEZyb21QYWNrYWdlcyhleGNsdWRlUGFja2FnZXM6IHN0cmluZyB8IHN0cmluZ1tdKTogRmFjdG9yeU1hcEludGVyZjtcbi8vIH1cblxuZXhwb3J0IGludGVyZmFjZSBJbmplY3RvckNvbmZpZ0hhbmRsZXIge1xuICBzZXR1cE5vZGVJbmplY3Rvcj8oZmFjdG9yeTogRHJQYWNrYWdlSW5qZWN0b3IpOiB2b2lkO1xuICBzZXR1cFdlYkluamVjdG9yPyhmYWN0b3J5OiBEclBhY2thZ2VJbmplY3Rvcik6IHZvaWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkb0luamVjdG9yQ29uZmlnKGZhY3Rvcnk6IERyUGFja2FnZUluamVjdG9yLCBpc05vZGUgPSBmYWxzZSk6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCBjb25maWc6IHR5cGVvZiBfY29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKTtcbiAgcmV0dXJuIGNvbmZpZy5jb25maWdIYW5kbGVyTWdyKCkucnVuRWFjaDxJbmplY3RvckNvbmZpZ0hhbmRsZXI+KChmaWxlOiBzdHJpbmcsIGxhc3RSZXN1bHQ6IGFueSwgaGFuZGxlcikgPT4ge1xuICAgIGlmIChpc05vZGUgJiYgaGFuZGxlci5zZXR1cE5vZGVJbmplY3RvcilcbiAgICAgIGhhbmRsZXIuc2V0dXBOb2RlSW5qZWN0b3IoZmFjdG9yeSk7XG4gICAgZWxzZSBpZiAoIWlzTm9kZSAmJiBoYW5kbGVyLnNldHVwV2ViSW5qZWN0b3IpXG4gICAgICBoYW5kbGVyLnNldHVwV2ViSW5qZWN0b3IoZmFjdG9yeSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZG9JbmplY3RvckNvbmZpZ1N5bmMoZmFjdG9yeTogRHJQYWNrYWdlSW5qZWN0b3IsIGlzTm9kZSA9IGZhbHNlKSB7XG4gIGNvbnN0IGNvbmZpZzogdHlwZW9mIF9jb25maWcgPSByZXF1aXJlKCcuL2NvbmZpZycpO1xuICBjb25maWcuY29uZmlnSGFuZGxlck1ncigpLnJ1bkVhY2hTeW5jPEluamVjdG9yQ29uZmlnSGFuZGxlcj4oKGZpbGU6IHN0cmluZywgbGFzdFJlc3VsdDogYW55LCBoYW5kbGVyKSA9PiB7XG4gICAgaWYgKGlzTm9kZSAmJiBoYW5kbGVyLnNldHVwTm9kZUluamVjdG9yKVxuICAgICAgaGFuZGxlci5zZXR1cE5vZGVJbmplY3RvcihmYWN0b3J5KTtcbiAgICBlbHNlIGlmICghaXNOb2RlICYmIGhhbmRsZXIuc2V0dXBXZWJJbmplY3RvcilcbiAgICAgIGhhbmRsZXIuc2V0dXBXZWJJbmplY3RvcihmYWN0b3J5KTtcbiAgfSk7XG59XG5cblxudHlwZSBWYWx1ZUZhY3RvcnkgPSAoc291cmNlRmlsZVBhdGg6IHN0cmluZywgcmVnZXhwRXhlY1Jlcz86IFJlZ0V4cEV4ZWNBcnJheSkgPT4gYW55O1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlcGxhY2VUeXBlVmFsdWUge1xuICByZXBsYWNlbWVudDogc3RyaW5nO1xuICB2YWx1ZTogYW55IHwgVmFsdWVGYWN0b3J5O1xufVxuIl19