"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const node_version_check_1 = tslib_1.__importDefault(require("dr-comp-package/wfh/dist/utils/node-version-check"));
function initCli(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        yield node_version_check_1.default();
        const drcpConfigFiles = options.drcpConfig ? options.drcpConfig.split(/\s*[,;:]\s*/) : [];
        const config = yield initDrcp(options.drcpArgs, drcpConfigFiles);
        fs_extra_1.default.mkdirpSync(config.resolve('destDir', 'ng-app-builder.report'));
        return config;
    });
}
exports.initCli = initCli;
function initDrcp(drcpArgs, drcpConfigFiles) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        var config = require('dr-comp-package/wfh/lib/config');
        if (drcpArgs.c == null)
            drcpArgs.c = [];
        drcpArgs.c.push(...drcpConfigFiles);
        yield config.init(drcpArgs);
        require('dr-comp-package/wfh/lib/logConfig')(config());
        return config;
    });
}
function newContext(ngBuildOption, options) {
    const constructor = require('./builder-context').BuilderContext;
    return new constructor(ngBuildOption, options);
}
exports.newContext = newContext;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9AZHItY29yZS9uZy1hcHAtYnVpbGRlci90cy9uZy9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBT0EsZ0VBQTBCO0FBQzFCLG1IQUEwRTtBQUkxRSxTQUFzQixPQUFPLENBQUMsT0FBMkI7O1FBQ3ZELE1BQU0sNEJBQVMsRUFBRSxDQUFDO1FBQ2xCLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFFLE9BQU8sQ0FBQyxVQUFxQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3RHLE1BQU0sTUFBTSxHQUFHLE1BQU0sUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFDakUsa0JBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FBQTtBQU5ELDBCQU1DO0FBQ0QsU0FBZSxRQUFRLENBQUMsUUFBYSxFQUFFLGVBQXlCOztRQUM5RCxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUV2RCxJQUFJLFFBQVEsQ0FBQyxDQUFDLElBQUksSUFBSTtZQUNwQixRQUFRLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNsQixRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLGVBQWUsQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QixPQUFPLENBQUMsbUNBQW1DLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FBQTtBQTRCRCxTQUFnQixVQUFVLENBQUMsYUFBOEIsRUFBRSxPQUErQjtJQUN4RixNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxjQUF1QyxDQUFDO0lBQ3pGLE9BQU8sSUFBSSxXQUFXLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFIRCxnQ0FHQyIsImZpbGUiOiJub2RlX21vZHVsZXMvQGRyLWNvcmUvbmctYXBwLWJ1aWxkZXIvZGlzdC9uZy9jb21tb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZSBuby1jb25zb2xlIG1heC1saW5lLWxlbmd0aCAqL1xuaW1wb3J0IHsgRGV2U2VydmVyQnVpbGRlck9wdGlvbnMgIH0gZnJvbSAnQGFuZ3VsYXItZGV2a2l0L2J1aWxkLWFuZ3VsYXInO1xuaW1wb3J0IHsgU2NoZW1hIGFzIE5vcm1hbGl6ZWRCcm93c2VyQnVpbGRlclNjaGVtYSB9IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9idWlsZC1hbmd1bGFyL3NyYy9icm93c2VyL3NjaGVtYSc7XG5pbXBvcnQgeyBTY2hlbWEgYXMgTm9ybWFsaXplZFNlcnZlckJ1aWxkZXJTZXJ2ZXJTY2hlbWEgfSBmcm9tICdAYW5ndWxhci1kZXZraXQvYnVpbGQtYW5ndWxhci9zcmMvc2VydmVyL3NjaGVtYSc7XG5pbXBvcnQge2pzb259IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9jb3JlJztcbmltcG9ydCBfX2NoYW5nZVdlYnBhY2tDb25maWcsIHt0cmFuc2Zvcm1JbmRleEh0bWwgYXMgX3RyYW5zZm9ybUluZGV4SHRtbH0gZnJvbSAnLi4vY29uZmlnLXdlYnBhY2snO1xuaW1wb3J0IGFwaSBmcm9tICdfX2FwaSc7XG5pbXBvcnQgZnMgZnJvbSAnZnMtZXh0cmEnO1xuaW1wb3J0IG5vZGVDaGVjayBmcm9tICdkci1jb21wLXBhY2thZ2Uvd2ZoL2Rpc3QvdXRpbHMvbm9kZS12ZXJzaW9uLWNoZWNrJztcblxuZXhwb3J0IHR5cGUgRHJjcENvbmZpZyA9IHR5cGVvZiBhcGkuY29uZmlnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdENsaShvcHRpb25zOiBEcmNwQnVpbGRlck9wdGlvbnMpIHtcbiAgYXdhaXQgbm9kZUNoZWNrKCk7XG4gIGNvbnN0IGRyY3BDb25maWdGaWxlcyA9IG9wdGlvbnMuZHJjcENvbmZpZyA/IChvcHRpb25zLmRyY3BDb25maWcgYXMgc3RyaW5nKS5zcGxpdCgvXFxzKlssOzpdXFxzKi8pIDogW107XG4gIGNvbnN0IGNvbmZpZyA9IGF3YWl0IGluaXREcmNwKG9wdGlvbnMuZHJjcEFyZ3MsIGRyY3BDb25maWdGaWxlcyk7XG4gIGZzLm1rZGlycFN5bmMoY29uZmlnLnJlc29sdmUoJ2Rlc3REaXInLCAnbmctYXBwLWJ1aWxkZXIucmVwb3J0JykpO1xuICByZXR1cm4gY29uZmlnO1xufVxuYXN5bmMgZnVuY3Rpb24gaW5pdERyY3AoZHJjcEFyZ3M6IGFueSwgZHJjcENvbmZpZ0ZpbGVzOiBzdHJpbmdbXSk6IFByb21pc2U8RHJjcENvbmZpZz4ge1xuICB2YXIgY29uZmlnID0gcmVxdWlyZSgnZHItY29tcC1wYWNrYWdlL3dmaC9saWIvY29uZmlnJyk7XG5cbiAgaWYgKGRyY3BBcmdzLmMgPT0gbnVsbClcbiAgICBkcmNwQXJncy5jID0gW107XG4gIGRyY3BBcmdzLmMucHVzaCguLi5kcmNwQ29uZmlnRmlsZXMpO1xuICBhd2FpdCBjb25maWcuaW5pdChkcmNwQXJncyk7XG4gIHJlcXVpcmUoJ2RyLWNvbXAtcGFja2FnZS93ZmgvbGliL2xvZ0NvbmZpZycpKGNvbmZpZygpKTtcbiAgcmV0dXJuIGNvbmZpZztcbn1cblxuZXhwb3J0IHR5cGUgYnVpbGRXZWJwYWNrQ29uZmlnRnVuYyA9IChicm93c2VyT3B0aW9uczogQW5ndWxhckJ1aWxkZXJPcHRpb25zKSA9PiBhbnk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQW5ndWxhckNsaVBhcmFtIHtcbiAgYnVpbGRlckNvbmZpZz86IERldlNlcnZlckJ1aWxkZXJPcHRpb25zO1xuICBicm93c2VyT3B0aW9uczogQW5ndWxhckJ1aWxkZXJPcHRpb25zO1xuICBzc3I6IGJvb2xlYW47IC8vIElzIHNlcnZlciBzaWRlIC8gcHJlcmVuZGVyXG4gIC8vIHdlYnBhY2tDb25maWc6IGFueTtcbiAgLy8gcHJvamVjdFJvb3Q6IHN0cmluZztcbiAgLy8gYXJndjogYW55O1xufVxuXG5leHBvcnQgdHlwZSBOb3JtYWxpemVkQW5ndWxhckJ1aWxkU2NoZW1hID0gTm9ybWFsaXplZEJyb3dzZXJCdWlsZGVyU2NoZW1hIHwgTm9ybWFsaXplZFNlcnZlckJ1aWxkZXJTZXJ2ZXJTY2hlbWE7XG4vLyBOb3JtYWxpemVkS2FybWFCdWlsZGVyU2NoZW1hO1xuXG5leHBvcnQgdHlwZSBBbmd1bGFyQnVpbGRlck9wdGlvbnMgPVxuICBOb3JtYWxpemVkQnJvd3NlckJ1aWxkZXJTY2hlbWEgJiBOb3JtYWxpemVkU2VydmVyQnVpbGRlclNlcnZlclNjaGVtYSAmXG4gIC8vIE5vcm1hbGl6ZWRLYXJtYUJ1aWxkZXJTY2hlbWEgJlxuICBEcmNwQnVpbGRlck9wdGlvbnMgJiBqc29uLkpzb25PYmplY3Q7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHJjcEJ1aWxkZXJPcHRpb25zIHtcbiAgZHJjcEFyZ3M6IGFueTtcbiAgZHJjcENvbmZpZzogc3RyaW5nO1xufVxuXG5pbXBvcnQge0J1aWxkZXJDb250ZXh0LCBCdWlsZGVyQ29udGV4dE9wdGlvbnN9IGZyb20gJy4vYnVpbGRlci1jb250ZXh0JztcblxuZXhwb3J0IGZ1bmN0aW9uIG5ld0NvbnRleHQobmdCdWlsZE9wdGlvbjogQW5ndWxhckNsaVBhcmFtLCBvcHRpb25zPzogQnVpbGRlckNvbnRleHRPcHRpb25zKSB7XG4gIGNvbnN0IGNvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9idWlsZGVyLWNvbnRleHQnKS5CdWlsZGVyQ29udGV4dCBhcyB0eXBlb2YgQnVpbGRlckNvbnRleHQ7XG4gIHJldHVybiBuZXcgY29uc3RydWN0b3IobmdCdWlsZE9wdGlvbiwgb3B0aW9ucyk7XG59XG4iXX0=
