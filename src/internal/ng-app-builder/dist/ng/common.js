"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
function initCli(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const drcpConfigFiles = options.drcpConfig ? options.drcpConfig.split(/\s*[,;:]\s*/) : [];
        return initDrcp(options.drcpArgs, drcpConfigFiles);
    });
}
exports.initCli = initCli;
function initDrcp(drcpArgs, drcpConfigFiles) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        var config = require('dr-comp-package/wfh/lib/config');
        if (drcpArgs.c == null)
            drcpArgs.c = [];
        drcpArgs.c.push(...drcpConfigFiles);
        yield config.init(drcpArgs);
        require('dr-comp-package/wfh/lib/logConfig')(config());
        return config;
    });
}
function configWebpack(param, webpackConfig, drcpConfigSetting) {
    const changeWebpackConfig = require('../config-webpack').default;
    changeWebpackConfig(param, webpackConfig, drcpConfigSetting);
}
exports.configWebpack = configWebpack;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9AZHItY29yZS9uZy1hcHAtYnVpbGRlci90cy9uZy9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBV0EsU0FBc0IsT0FBTyxDQUFDLE9BQVk7O1FBQ3hDLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFFLE9BQU8sQ0FBQyxVQUFxQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3RHLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDckQsQ0FBQztDQUFBO0FBSEQsMEJBR0M7QUFDRCxTQUFlLFFBQVEsQ0FBQyxRQUFhLEVBQUUsZUFBeUI7O1FBQzlELElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBRXZELElBQUksUUFBUSxDQUFDLENBQUMsSUFBSSxJQUFJO1lBQ3BCLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsZUFBZSxDQUFDLENBQUM7UUFDcEMsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVCLE9BQU8sQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFDdkQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztDQUFBO0FBRUQsU0FBZ0IsYUFBYSxDQUFDLEtBQXNCLEVBQUUsYUFBb0MsRUFDeEYsaUJBQXFDO0lBQ3JDLE1BQU0sbUJBQW1CLEdBQWlDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUMvRixtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFDL0QsQ0FBQztBQUpELHNDQUlDIiwiZmlsZSI6Im5vZGVfbW9kdWxlcy9AZHItY29yZS9uZy1hcHAtYnVpbGRlci9kaXN0L25nL2NvbW1vbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlIG5vLWNvbnNvbGUgbWF4LWxpbmUtbGVuZ3RoICovXG5pbXBvcnQgeyBEZXZTZXJ2ZXJCdWlsZGVyT3B0aW9ucyB9IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9idWlsZC1hbmd1bGFyJztcbmltcG9ydCB7IFNjaGVtYSBhcyBOb3JtYWxpemVkQnJvd3NlckJ1aWxkZXJTY2hlbWEgfSBmcm9tICdAYW5ndWxhci1kZXZraXQvYnVpbGQtYW5ndWxhci9zcmMvYnJvd3Nlci9zY2hlbWEnO1xuaW1wb3J0IHsgU2NoZW1hIGFzIE5vcm1hbGl6ZWRTZXJ2ZXJCdWlsZGVyU2VydmVyU2NoZW1hIH0gZnJvbSAnQGFuZ3VsYXItZGV2a2l0L2J1aWxkLWFuZ3VsYXIvc3JjL3NlcnZlci9zY2hlbWEnO1xuaW1wb3J0IHtqc29ufSBmcm9tICdAYW5ndWxhci1kZXZraXQvY29yZSc7XG5pbXBvcnQgX19jaGFuZ2VXZWJwYWNrQ29uZmlnIGZyb20gJy4uL2NvbmZpZy13ZWJwYWNrJztcbmltcG9ydCB3ZWJwYWNrIGZyb20gJ3dlYnBhY2snO1xuaW1wb3J0IGFwaSBmcm9tICdfX2FwaSc7XG5cbmV4cG9ydCB0eXBlIERyY3BDb25maWcgPSB0eXBlb2YgYXBpLmNvbmZpZztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluaXRDbGkob3B0aW9uczogYW55KSB7XG4gIGNvbnN0IGRyY3BDb25maWdGaWxlcyA9IG9wdGlvbnMuZHJjcENvbmZpZyA/IChvcHRpb25zLmRyY3BDb25maWcgYXMgc3RyaW5nKS5zcGxpdCgvXFxzKlssOzpdXFxzKi8pIDogW107XG4gIHJldHVybiBpbml0RHJjcChvcHRpb25zLmRyY3BBcmdzLCBkcmNwQ29uZmlnRmlsZXMpO1xufVxuYXN5bmMgZnVuY3Rpb24gaW5pdERyY3AoZHJjcEFyZ3M6IGFueSwgZHJjcENvbmZpZ0ZpbGVzOiBzdHJpbmdbXSk6IFByb21pc2U8RHJjcENvbmZpZz4ge1xuICB2YXIgY29uZmlnID0gcmVxdWlyZSgnZHItY29tcC1wYWNrYWdlL3dmaC9saWIvY29uZmlnJyk7XG5cbiAgaWYgKGRyY3BBcmdzLmMgPT0gbnVsbClcbiAgICBkcmNwQXJncy5jID0gW107XG4gIGRyY3BBcmdzLmMucHVzaCguLi5kcmNwQ29uZmlnRmlsZXMpO1xuICBhd2FpdCBjb25maWcuaW5pdChkcmNwQXJncyk7XG4gIHJlcXVpcmUoJ2RyLWNvbXAtcGFja2FnZS93ZmgvbGliL2xvZ0NvbmZpZycpKGNvbmZpZygpKTtcbiAgcmV0dXJuIGNvbmZpZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ1dlYnBhY2socGFyYW06IEFuZ3VsYXJDbGlQYXJhbSwgd2VicGFja0NvbmZpZzogd2VicGFjay5Db25maWd1cmF0aW9uLFxuICBkcmNwQ29uZmlnU2V0dGluZzoge2Rldk1vZGU6IGJvb2xlYW59KSB7XG4gIGNvbnN0IGNoYW5nZVdlYnBhY2tDb25maWc6IHR5cGVvZiBfX2NoYW5nZVdlYnBhY2tDb25maWcgPSByZXF1aXJlKCcuLi9jb25maWctd2VicGFjaycpLmRlZmF1bHQ7XG4gIGNoYW5nZVdlYnBhY2tDb25maWcocGFyYW0sIHdlYnBhY2tDb25maWcsIGRyY3BDb25maWdTZXR0aW5nKTtcbn1cblxuZXhwb3J0IHR5cGUgYnVpbGRXZWJwYWNrQ29uZmlnRnVuYyA9IChicm93c2VyT3B0aW9uczogQW5ndWxhckJ1aWxkZXJPcHRpb25zKSA9PiBhbnk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQW5ndWxhckNsaVBhcmFtIHtcbiAgYnVpbGRlckNvbmZpZz86IERldlNlcnZlckJ1aWxkZXJPcHRpb25zO1xuICBicm93c2VyT3B0aW9uczogQW5ndWxhckJ1aWxkZXJPcHRpb25zO1xuICBzc3I6IGJvb2xlYW47IC8vIElzIHNlcnZlciBzaWRlIC8gcHJlcmVuZGVyXG4gIC8vIHdlYnBhY2tDb25maWc6IGFueTtcbiAgLy8gcHJvamVjdFJvb3Q6IHN0cmluZztcbiAgLy8gYXJndjogYW55O1xufVxuXG5leHBvcnQgdHlwZSBOb3JtYWxpemVkQW5ndWxhckJ1aWxkU2NoZW1hID0gTm9ybWFsaXplZEJyb3dzZXJCdWlsZGVyU2NoZW1hIHwgTm9ybWFsaXplZFNlcnZlckJ1aWxkZXJTZXJ2ZXJTY2hlbWE7XG4vLyBOb3JtYWxpemVkS2FybWFCdWlsZGVyU2NoZW1hO1xuXG5leHBvcnQgdHlwZSBBbmd1bGFyQnVpbGRlck9wdGlvbnMgPVxuICBOb3JtYWxpemVkQnJvd3NlckJ1aWxkZXJTY2hlbWEgJiBOb3JtYWxpemVkU2VydmVyQnVpbGRlclNlcnZlclNjaGVtYSAmXG4gIC8vIE5vcm1hbGl6ZWRLYXJtYUJ1aWxkZXJTY2hlbWEgJlxuICBEcmNwQnVpbGRlck9wdGlvbnMgJiBqc29uLkpzb25PYmplY3Q7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHJjcEJ1aWxkZXJPcHRpb25zIHtcbiAgZHJjcEFyZ3M6IGFueTtcbiAgZHJjcENvbmZpZzogc3RyaW5nO1xufVxuIl19
