"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
function initCli(options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const drcpConfigFiles = options.drcpConfig ? options.drcpConfig.split(/\s*[,;:]\s*/) : [];
        return initDrcp(options.drcpArgs, drcpConfigFiles);
    });
}
exports.initCli = initCli;
function initDrcp(drcpArgs, drcpConfigFiles) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        var config = require('dr-comp-package/wfh/lib/config');
        if (drcpArgs.c == null)
            drcpArgs.c = [];
        drcpArgs.c.push(...drcpConfigFiles);
        yield config.init(drcpArgs);
        require('dr-comp-package/wfh/lib/logConfig')(config());
        return config;
    });
}
function configWebpack(param, webpackConfig, drcpConfigSetting) {
    const changeWebpackConfig = require('../config-webpack').default;
    changeWebpackConfig(param, webpackConfig, drcpConfigSetting);
}
exports.configWebpack = configWebpack;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9AZHItY29yZS9uZy1hcHAtYnVpbGRlci90cy9uZy9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBV0EsU0FBc0IsT0FBTyxDQUFDLE9BQVk7O1FBQ3pDLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFFLE9BQU8sQ0FBQyxVQUFxQixDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3RHLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDcEQsQ0FBQztDQUFBO0FBSEQsMEJBR0M7QUFDRCxTQUFlLFFBQVEsQ0FBQyxRQUFhLEVBQUUsZUFBeUI7O1FBQy9ELElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBRXZELElBQUksUUFBUSxDQUFDLENBQUMsSUFBSSxJQUFJO1lBQ3JCLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsZUFBZSxDQUFDLENBQUM7UUFDcEMsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVCLE9BQU8sQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFDdkQsT0FBTyxNQUFNLENBQUM7SUFDZixDQUFDO0NBQUE7QUFFRCxTQUFnQixhQUFhLENBQUMsS0FBc0IsRUFBRSxhQUFvQyxFQUN6RixpQkFBcUM7SUFDckMsTUFBTSxtQkFBbUIsR0FBaUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUMsT0FBTyxDQUFDO0lBQy9GLG1CQUFtQixDQUFDLEtBQUssRUFBRSxhQUFhLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQUM5RCxDQUFDO0FBSkQsc0NBSUMiLCJmaWxlIjoibm9kZV9tb2R1bGVzL0Bkci1jb3JlL25nLWFwcC1idWlsZGVyL2Rpc3QvbmcvY29tbW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgbm8tY29uc29sZSBtYXgtbGluZS1sZW5ndGggKi9cbmltcG9ydCB7IERldlNlcnZlckJ1aWxkZXJPcHRpb25zIH0gZnJvbSAnQGFuZ3VsYXItZGV2a2l0L2J1aWxkLWFuZ3VsYXInO1xuaW1wb3J0IHsgU2NoZW1hIGFzIE5vcm1hbGl6ZWRCcm93c2VyQnVpbGRlclNjaGVtYSB9IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9idWlsZC1hbmd1bGFyL3NyYy9icm93c2VyL3NjaGVtYSc7XG5pbXBvcnQgeyBTY2hlbWEgYXMgTm9ybWFsaXplZFNlcnZlckJ1aWxkZXJTZXJ2ZXJTY2hlbWEgfSBmcm9tICdAYW5ndWxhci1kZXZraXQvYnVpbGQtYW5ndWxhci9zcmMvc2VydmVyL3NjaGVtYSc7XG5pbXBvcnQge2pzb259IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9jb3JlJztcbmltcG9ydCBfX2NoYW5nZVdlYnBhY2tDb25maWcgZnJvbSAnLi4vY29uZmlnLXdlYnBhY2snO1xuaW1wb3J0IHdlYnBhY2sgZnJvbSAnd2VicGFjayc7XG5pbXBvcnQgYXBpIGZyb20gJ19fYXBpJztcblxuZXhwb3J0IHR5cGUgRHJjcENvbmZpZyA9IHR5cGVvZiBhcGkuY29uZmlnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdENsaShvcHRpb25zOiBhbnkpIHtcblx0Y29uc3QgZHJjcENvbmZpZ0ZpbGVzID0gb3B0aW9ucy5kcmNwQ29uZmlnID8gKG9wdGlvbnMuZHJjcENvbmZpZyBhcyBzdHJpbmcpLnNwbGl0KC9cXHMqWyw7Ol1cXHMqLykgOiBbXTtcblx0cmV0dXJuIGluaXREcmNwKG9wdGlvbnMuZHJjcEFyZ3MsIGRyY3BDb25maWdGaWxlcyk7XG59XG5hc3luYyBmdW5jdGlvbiBpbml0RHJjcChkcmNwQXJnczogYW55LCBkcmNwQ29uZmlnRmlsZXM6IHN0cmluZ1tdKTogUHJvbWlzZTxEcmNwQ29uZmlnPiB7XG5cdHZhciBjb25maWcgPSByZXF1aXJlKCdkci1jb21wLXBhY2thZ2Uvd2ZoL2xpYi9jb25maWcnKTtcblxuXHRpZiAoZHJjcEFyZ3MuYyA9PSBudWxsKVxuXHRcdGRyY3BBcmdzLmMgPSBbXTtcblx0ZHJjcEFyZ3MuYy5wdXNoKC4uLmRyY3BDb25maWdGaWxlcyk7XG5cdGF3YWl0IGNvbmZpZy5pbml0KGRyY3BBcmdzKTtcblx0cmVxdWlyZSgnZHItY29tcC1wYWNrYWdlL3dmaC9saWIvbG9nQ29uZmlnJykoY29uZmlnKCkpO1xuXHRyZXR1cm4gY29uZmlnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlnV2VicGFjayhwYXJhbTogQW5ndWxhckNsaVBhcmFtLCB3ZWJwYWNrQ29uZmlnOiB3ZWJwYWNrLkNvbmZpZ3VyYXRpb24sXG5cdGRyY3BDb25maWdTZXR0aW5nOiB7ZGV2TW9kZTogYm9vbGVhbn0pIHtcblx0Y29uc3QgY2hhbmdlV2VicGFja0NvbmZpZzogdHlwZW9mIF9fY2hhbmdlV2VicGFja0NvbmZpZyA9IHJlcXVpcmUoJy4uL2NvbmZpZy13ZWJwYWNrJykuZGVmYXVsdDtcblx0Y2hhbmdlV2VicGFja0NvbmZpZyhwYXJhbSwgd2VicGFja0NvbmZpZywgZHJjcENvbmZpZ1NldHRpbmcpO1xufVxuXG5leHBvcnQgdHlwZSBidWlsZFdlYnBhY2tDb25maWdGdW5jID0gKGJyb3dzZXJPcHRpb25zOiBBbmd1bGFyQnVpbGRlck9wdGlvbnMpID0+IGFueTtcblxuZXhwb3J0IGludGVyZmFjZSBBbmd1bGFyQ2xpUGFyYW0ge1xuXHRidWlsZGVyQ29uZmlnPzogRGV2U2VydmVyQnVpbGRlck9wdGlvbnM7XG5cdGJyb3dzZXJPcHRpb25zOiBBbmd1bGFyQnVpbGRlck9wdGlvbnM7XG5cdHNzcjogYm9vbGVhbjsgLy8gSXMgc2VydmVyIHNpZGUgLyBwcmVyZW5kZXJcblx0Ly8gd2VicGFja0NvbmZpZzogYW55O1xuXHQvLyBwcm9qZWN0Um9vdDogc3RyaW5nO1xuXHQvLyBhcmd2OiBhbnk7XG59XG5cbmV4cG9ydCB0eXBlIE5vcm1hbGl6ZWRBbmd1bGFyQnVpbGRTY2hlbWEgPSBOb3JtYWxpemVkQnJvd3NlckJ1aWxkZXJTY2hlbWEgfCBOb3JtYWxpemVkU2VydmVyQnVpbGRlclNlcnZlclNjaGVtYTtcbi8vIE5vcm1hbGl6ZWRLYXJtYUJ1aWxkZXJTY2hlbWE7XG5cbmV4cG9ydCB0eXBlIEFuZ3VsYXJCdWlsZGVyT3B0aW9ucyA9XG5cdE5vcm1hbGl6ZWRCcm93c2VyQnVpbGRlclNjaGVtYSAmIE5vcm1hbGl6ZWRTZXJ2ZXJCdWlsZGVyU2VydmVyU2NoZW1hICZcblx0Ly8gTm9ybWFsaXplZEthcm1hQnVpbGRlclNjaGVtYSAmXG5cdERyY3BCdWlsZGVyT3B0aW9ucyAmIGpzb24uSnNvbk9iamVjdDtcblxuZXhwb3J0IGludGVyZmFjZSBEcmNwQnVpbGRlck9wdGlvbnMge1xuXHRkcmNwQXJnczogYW55O1xuXHRkcmNwQ29uZmlnOiBzdHJpbmc7XG59XG4iXX0=
